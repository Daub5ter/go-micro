version: '3'

services:

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}

  analysis-service:
    build:
      context: ./../analysis-service
      dockerfile: ./../analysis-service/analysis-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}

  mailer-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: ${DOMAIN}
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM NAME: "Test Name"
      FROM_ADDRESS: "test.name@example.com"

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: ${POSTGRES_DSN}

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: 'postgres:16.0'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  #mongosh ${USERNAME} -u ${USERNAME} -p ${PASSWORD}
  mongo:
    image: 'mongo:7.0'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE_LOGS}, ${MONGO_DATABASE_USERS_ANALYSIS}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./db-data/mongo/:/data/db

  redis:
    image: 'redis:6.0'
    ports:
      - "6379:6379"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command:
      /bin/sh -c "redis-server --requirepass $REDIS_PASSWORD"
    volumes:
      - ./db-data/redis/redis-data:/var/lib/redis
      - ./db-data/redis/redis.conf:/usr/local/etc/redis/redis.conf


  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: 'rabbitmq:3.12-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/